# rsum.ys
# Zhang Zichen 5110369009

	.pos 0
init:
	irmovl Stack, %esp
	irmovl Stack, %ebp
	call Main
	halt
	
# Sample linked list
	.align 4
ele1:
	.long 0x00a
	.long ele2
ele2:
	.long 0x0b0
	.long ele3
ele3:
	.long 0xc00
	.long 0
	
#void main()
Main:
	pushl %ebp
	rrmovl %esp, %ebp
	irmovl ele1, %eax
	pushl %eax
	call RSumList
	irmovl $4, %ecx
	addl %ecx, %esp
	rrmovl %ebp, %esp
	popl %ebp
	ret

#int rsum_list(list_ptr ls)
RSumList:
	pushl %ebp
	rrmovl %esp, %ebp
	pushl %ebx
	mrmovl 8(%ebp), %ecx		#ld. ls
	andl %ecx, %ecx
	jne L1
	xorl %eax, %eax			#return 0;
	jmp LRetn
L1:
	mrmovl (%ecx), %ebx		#int val = ls->val;
	mrmovl 4(%ecx), %eax		#ld. ls->next
	pushl %eax
	call RSumList			#int rest = rsum_list(ls->next);
	irmovl $4, %ecx	
	addl %ecx, %esp
	addl %ebx, %eax
LRetn:
	popl %ebx
	popl %ebp
	ret
	
	
# Stack
	.pos 0x100
Stack:
